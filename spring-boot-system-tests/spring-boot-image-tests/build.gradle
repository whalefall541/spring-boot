plugins {
	id 'java-gradle-plugin'
	id "org.springframework.boot.conventions"
	id "org.springframework.boot.system-test"
}

description = "Spring Boot Image Building Tests"

configurations {
	providedRuntime {
		extendsFrom dependencyManagement
	}
}

systemTest {
	if (project.hasProperty("springBootVersion")) {
		systemProperty "springBootVersion", project.properties["springBootVersion"]
	} else {
		systemProperty "springBootVersion", project.getVersion()
	}
}

dependencies {
	implementation(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web")) {
		exclude group: "org.hibernate.validator"
	}

	systemTestImplementation(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-test"))
	systemTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	systemTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform"))
	systemTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-loader-tools"))
	systemTestImplementation("io.spring.gradle:dependency-management-plugin")
	systemTestImplementation(gradleTestKit())
	systemTestImplementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
	systemTestImplementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
	systemTestImplementation("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
	systemTestImplementation("org.jetbrains.kotlin:kotlin-compiler-runner:$kotlinVersion")
	systemTestImplementation("org.jetbrains.kotlin:kotlin-daemon-client:$kotlinVersion")
	systemTestImplementation("org.assertj:assertj-core")
	systemTestImplementation("org.testcontainers:junit-jupiter")
	systemTestImplementation("org.testcontainers:testcontainers")
}

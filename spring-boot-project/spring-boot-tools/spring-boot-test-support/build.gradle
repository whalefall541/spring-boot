plugins {
	id "java-library"
	id "org.springframework.boot.conventions"
}

description = "Spring Boot Testing Support"

dependencies {
	api(platform(project(path: ":spring-boot-project:spring-boot-parent")))

	compileOnly("com.datastax.oss:java-driver-core")
	compileOnly("javax.servlet:javax.servlet-api")
	compileOnly("junit:junit")
	compileOnly("org.elasticsearch:elasticsearch")
	compileOnly("org.junit.jupiter:junit-jupiter")
	compileOnly("org.junit.platform:junit-platform-engine")
	compileOnly("org.junit.platform:junit-platform-launcher")
	compileOnly("org.mockito:mockito-core")
	compileOnly("org.springframework:spring-context")
	compileOnly("org.springframework.data:spring-data-redis")
	compileOnly("org.testcontainers:testcontainers")

	compileOnly(project(":spring-boot-project:spring-boot-tools:spring-boot-buildpack-platform"))
	compileOnly(project(":spring-boot-project:spring-boot-tools:spring-boot-loader-tools"))
	compileOnly("io.spring.gradle:dependency-management-plugin")
	compileOnly(gradleTestKit())
	compileOnly("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
	compileOnly("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
	compileOnly("org.jetbrains.kotlin:kotlin-compiler-runner:$kotlinVersion")
	compileOnly("org.jetbrains.kotlin:kotlin-daemon-client:$kotlinVersion")
	compileOnly("org.apache.commons:commons-compress")

	implementation("org.apache.maven.resolver:maven-resolver-connector-basic")
	implementation("org.apache.maven.resolver:maven-resolver-impl")
	implementation("org.apache.maven:maven-resolver-provider")
	implementation("org.apache.maven.resolver:maven-resolver-transport-http") {
		exclude group: "org.slf4j", module: "jcl-over-slf4j"
	}
	implementation("org.assertj:assertj-core")
	implementation("org.hamcrest:hamcrest-core")
	implementation("org.hamcrest:hamcrest-library")
	implementation("org.springframework:spring-core")
	implementation("org.springframework:spring-test")

	testImplementation("javax.servlet:javax.servlet-api")
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.springframework:spring-context")

	testRuntimeOnly("org.hibernate.validator:hibernate-validator")
	testRuntimeOnly("org.mockito:mockito-core")
}
